Application 1
Logic: Outer join the outdegrees with ranks and then use aggregateMessages in each iteration.
Run: PartBApplication1Question1.sh

Application 2 Question 1
Logic: Filter triplets with the src.length > dst.length criterium.
Run: PartBApplication2Question1.sh

Application 2 Question 2
Logic: Use outerjoin to create a new graph with VD a (outdegree, numberOfWords) pair. Then reduce the vertices.
Run: PartBApplication2Question2.sh

Application 2 Question 3
Logic: Aggregate messages and compute the average
Run: PartBApplication2Question3.sh

Application 2 Question 4 (Extra credit 1)
Logic: collect the words in all edges, do a word count and find the maximum
Run: PartBApplication2Question4.sh

Application 2 Question 5 (Extra credit 2)
Logic: use the connectedComponents method to get the membership of all vertices and reduce them by the membership
Run: PartBApplication2Question5.sh

Application 2 Question 6 (Extra credit 3)
Logic: Based on question 4, just filter all the vertices which does not contain the most popular word.
Run: PartBApplication2Question6.sh
